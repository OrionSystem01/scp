local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\19\184","\164\61\150\74\227\222"),function(v43)if (v9(v43,2)==79) then local v90=0;while true do if (v90==0) then v31=v8(v11(v43,1,1));return "";end end else local v91=0;local v92;while true do if (0==v91) then v92=v10(v8(v43,16));if v31 then local v124=v13(v92,v31);v31=nil;return v124;else return v92;end break;end end end end);v32=nil;v29=1;end if (v29==1) then function v32(v44,v45,v46)if v46 then local v93=0;local v94;while true do if (v93==0) then v94=(v44/(2^(v45-1)))%((5 -3)^(((v46-1) -(v45-1)) + (2 -1))) ;return v94-(v94%1) ;end end else local v95=0;local v96;while true do if (v95==0) then v96=2^(v45-1) ;return (((v44%(v96 + v96))>=v96) and 1) or 0 ;end end end end v33=nil;function v33()local v47=v9(v27,v30,v30);v30=v30 + 1 ;return v47;end v34=nil;v29=2;end if (v29==2) then function v34()local v48=0;local v49;local v50;while true do if (v48==0) then v49,v50=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v48=1;end if (v48==1) then return (v50 * (493 -237)) + v49 ;end end end v35=nil;function v35()local v51=0;local v52;local v53;local v54;local v55;while true do if (v51==1) then return (v55 * 16777216) + (v54 * 65536) + (v53 * 256) + v52 ;end if (v51==0) then v52,v53,v54,v55=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v51=1;end end end v36=nil;v29=3;end if (v29==5) then v41=nil;function v41(v56,v57,v58)local v59=0;local v60;local v61;local v62;while true do if (v59==0) then v60=v56[1];v61=v56[2];v59=1;end if (v59==1) then v62=v56[3];return function(...)local v100=v60;local v101=v61;local v102=v62;local v103=v39;local v104=1;local v105= -1;local v106={};local v107={...};local v108=v20("#",...) -1 ;local v109={};local v110={};for v117=0,v108 do if (v117>=v102) then v106[v117-v102 ]=v107[v117 + 1 ];else v110[v117]=v107[v117 + 1 ];end end local v111=(v108-v102) + 1 ;local v112;local v113;while true do local v118=0;while true do if (v118==1) then if (v113<=(39 + 4)) then if (v113<=21) then if (v113<=10) then if (v113<=4) then if (v113<=1) then if (v113==0) then local v144=v112[2];local v145=v110[v144];local v146=v110[v144 + 2 ];if (v146>0) then if (v145>v110[v144 + 1 ]) then v104=v112[3];else v110[v144 + 3 ]=v145;end elseif (v145<v110[v144 + 1 ]) then v104=v112[3];else v110[v144 + 3 ]=v145;end elseif (v110[v112[2]]==v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=2) then v110[v112[2]]=v41(v101[v112[3]],nil,v58);elseif (v113>3) then v110[v112[2]][v112[3]]=v110[v112[4]];else v110[v112[2]][v110[v112[3]]]=v110[v112[4]];end elseif (v113<=7) then if (v113<=5) then local v148=0;local v149;local v150;while true do if (v148==0) then v149=v112[2];v150=v110[v149];v148=1;end if (1==v148) then for v340=v149 + 1 ,v105 do v15(v150,v110[v340]);end break;end end elseif (v113==6) then v110[v112[2]][v112[3]]=v112[4];else local v222=0;local v223;local v224;while true do if (1==v222) then for v397=1, #v109 do local v398=0;local v399;while true do if (v398==0) then v399=v109[v397];for v438=0, #v399 do local v439=v399[v438];local v440=v439[1];local v441=v439[2];if ((v440==v110) and (v441>=v223)) then local v447=0;while true do if (v447==0) then v224[v441]=v440[v441];v439[1]=v224;break;end end end end break;end end end break;end if (v222==0) then v223=v112[2];v224={};v222=1;end end end elseif (v113<=8) then v110[v112[2]]={};elseif (v113>(12 -3)) then if (v110[v112[2]]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[1068 -(68 + 997) ];end else v110[v112[2]]=v110[v112[3]]%v112[4] ;end elseif (v113<=(1285 -(226 + 1044))) then if (v113<=12) then if (v113==11) then local v152=0;local v153;while true do if (v152==0) then v153=v112[8 -6 ];v110[v153]=v110[v153](v21(v110,v153 + 1 ,v105));break;end end elseif v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=13) then v110[v112[119 -(32 + 85) ]]=v110[v112[3]];elseif (v113>14) then local v227=0;local v228;local v229;while true do if (v227==1) then for v400=v228 + 1 ,v105 do v15(v229,v110[v400]);end break;end if (v227==0) then v228=v112[2];v229=v110[v228];v227=1;end end else local v230=v112[2];local v231=v110[v230];local v232=v110[v230 + 2 ];if (v232>0) then if (v231>v110[v230 + 1 ]) then v104=v112[3];else v110[v230 + 3 ]=v231;end elseif (v231<v110[v230 + 1 ]) then v104=v112[3];else v110[v230 + 3 ]=v231;end end elseif (v113<=18) then if (v113<=16) then local v156=v101[v112[3]];local v157;local v158={};v157=v18({},{[v7("\122\16\240\61\86\6\93","\99\37\79\153\83\50")]=function(v199,v200)local v201=0;local v202;while true do if (0==v201) then v202=v158[v200];return v202[1 + 0 ][v202[2]];end end end,[v7("\228\114\83\243\204\68\83\242\222\85","\150\187\45\61")]=function(v203,v204,v205)local v206=0;local v207;while true do if (v206==0) then v207=v158[v204];v207[1 + 0 ][v207[2]]=v205;break;end end end});for v208=1,v112[4] do local v209=0;local v210;while true do if (v209==0) then v104=v104 + 1 ;v210=v100[v104];v209=1;end if (v209==1) then if (v210[1]==13) then v158[v208-1 ]={v110,v210[3]};else v158[v208-1 ]={v57,v210[3]};end v109[ #v109 + 1 ]=v158;break;end end end v110[v112[2]]=v41(v156,v157,v58);elseif (v113==(974 -(892 + 65))) then local v233=0;local v234;while true do if (v233==0) then v234=v112[2];v110[v234]=v110[v234](v21(v110,v234 + 1 ,v112[3]));break;end end else v110[v112[2]]= #v110[v112[3]];end elseif (v113<=19) then v110[v112[2]]=v112[3];elseif (v113==20) then local v236=0;local v237;local v238;local v239;local v240;while true do if (v236==0) then v237=v112[2];v238,v239=v103(v110[v237](v21(v110,v237 + 1 ,v112[3])));v236=1;end if (v236==2) then for v407=v237,v105 do local v408=0;while true do if (v408==0) then v240=v240 + 1 ;v110[v407]=v238[v240];break;end end end break;end if (1==v236) then v105=(v239 + v237) -1 ;v240=0;v236=2;end end else local v241=0;local v242;local v243;while true do if (v241==0) then v242=v112[2];v243=v110[v112[3]];v241=1;end if (v241==1) then v110[v242 + 1 ]=v243;v110[v242]=v243[v112[4]];break;end end end elseif (v113<=32) then if (v113<=26) then if (v113<=23) then if (v113==22) then v104=v112[7 -4 ];else local v163=0;local v164;local v165;local v166;while true do if (v163==1) then v166={};v165=v18({},{[v7("\35\76\162\125\24\118\179","\19\124\19\203")]=function(v347,v348)local v349=0;local v350;while true do if (v349==0) then v350=v166[v348];return v350[1 -0 ][v350[2]];end end end,[v7("\254\45\3\240\21\121\183\197\23\21","\217\161\114\109\149\98\16")]=function(v351,v352,v353)local v354=0;local v355;while true do if (v354==0) then v355=v166[v352];v355[1][v355[2]]=v353;break;end end end});v163=2;end if (v163==2) then for v356=1,v112[4] do v104=v104 + 1 ;local v357=v100[v104];if (v357[1]==(23 -10)) then v166[v356-1 ]={v110,v357[3]};else v166[v356-1 ]={v57,v357[3]};end v109[ #v109 + 1 + 0 ]=v166;end v110[v112[4 -2 ]]=v41(v164,v165,v58);break;end if (v163==0) then v164=v101[v112[3]];v165=nil;v163=1;end end end elseif (v113<=24) then v110[v112[2]]=v112[3]~=0 ;elseif (v113>(19 + 6)) then v110[v112[2]]=v57[v112[3]];else local v246=v112[2];v110[v246](v21(v110,v246 + 1 ,v105));end elseif (v113<=29) then if (v113<=27) then v110[v112[2]]=v110[v112[3]];elseif (v113>28) then v110[v112[7 -5 ]]=v112[3]~=0 ;else v110[v112[2]]=v58[v112[3]];end elseif (v113<=30) then local v170=0;local v171;while true do if (v170==0) then v171=v112[2];v110[v171]=v110[v171](v21(v110,v171 + 1 ,v105));break;end end elseif (v113==31) then local v250=0;local v251;local v252;local v253;while true do if (0==v250) then v251=v112[2];v252=v110[v251 + 2 ];v250=1;end if (2==v250) then if (v252>0) then if (v253<=v110[v251 + (953 -(802 + 150)) ]) then local v429=0;while true do if (v429==0) then v104=v112[3];v110[v251 + (7 -4) ]=v253;break;end end end elseif (v253>=v110[v251 + 1 ]) then local v430=0;while true do if (v430==0) then v104=v112[3];v110[v251 + 3 ]=v253;break;end end end break;end if (v250==1) then v253=v110[v251] + v252 ;v110[v251]=v253;v250=2;end end else local v254=0;local v255;local v256;local v257;while true do if (v254==2) then if (v256>0) then if (v257<=v110[v255 + 1 ]) then local v431=0;while true do if (v431==0) then v104=v112[3];v110[v255 + 3 ]=v257;break;end end end elseif (v257>=v110[v255 + (1 -0) ]) then local v432=0;while true do if (0==v432) then v104=v112[3];v110[v255 + 3 ]=v257;break;end end end break;end if (v254==0) then v255=v112[2];v256=v110[v255 + 2 ];v254=1;end if (1==v254) then v257=v110[v255] + v256 ;v110[v255]=v257;v254=2;end end end elseif (v113<=37) then if (v113<=34) then if (v113>33) then local v172=v112[2];do return v110[v172](v21(v110,v172 + 1 ,v112[3]));end else v110[v112[2]]=v110[v112[3]] + v112[4] ;end elseif (v113<=35) then for v211=v112[2 + 0 ],v112[3] do v110[v211]=nil;end elseif (v113==36) then v110[v112[2]]=v110[v112[3]][v112[4]];else v110[v112[999 -(915 + 82) ]][v112[3]]=v110[v112[4]];end elseif (v113<=40) then if (v113<=38) then do return v110[v112[2]]();end elseif (v113>(110 -71)) then v110[v112[2]]=v110[v112[3]]%v112[4] ;else local v263=0;local v264;while true do if (v263==0) then v264=v112[2];v110[v264]=v110[v264]();break;end end end elseif (v113<=41) then if  not v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end elseif (v113==42) then local v266=v112[2];local v267,v268=v103(v110[v266](v21(v110,v266 + 1 ,v105)));v105=(v268 + v266) -1 ;local v269=0;for v327=v266,v105 do local v328=0;while true do if (v328==0) then v269=v269 + 1 ;v110[v327]=v267[v269];break;end end end else v110[v112[2]]=v110[v112[3]]%v110[v112[4]] ;end elseif (v113<=65) then if (v113<=54) then if (v113<=48) then if (v113<=(27 + 18)) then if (v113==44) then v110[v112[2]]=v110[v112[3]] + v112[4] ;elseif (v112[2]==v110[v112[4 -0 ]]) then v104=v104 + 1 ;else v104=v112[1190 -(1069 + 118) ];end elseif (v113<=46) then local v175=0;local v176;while true do if (v175==0) then v176=v112[2];do return v21(v110,v176,v105);end break;end end elseif (v113==47) then local v272=0;local v273;while true do if (0==v272) then v273=v112[2];v110[v273](v21(v110,v273 + 1 ,v105));break;end end else v110[v112[2]]={};end elseif (v113<=51) then if (v113<=(110 -61)) then v110[v112[2]]();elseif (v113==50) then v110[v112[2]]=v58[v112[3]];else v110[v112[2]]=v110[v112[3]]%v110[v112[4]] ;end elseif (v113<=52) then v110[v112[2]]=v57[v112[3]];elseif (v113==53) then if (v112[2]==v110[v112[8 -4 ]]) then v104=v104 + 1 ;else v104=v112[3];end else local v278=0;local v279;local v280;local v281;local v282;while true do if (1==v278) then v105=(v281 + v279) -(1 + 0) ;v282=0;v278=2;end if (v278==0) then v279=v112[2];v280,v281=v103(v110[v279](v110[v279 + 1 ]));v278=1;end if (2==v278) then for v413=v279,v105 do local v414=0;while true do if (v414==0) then v282=v282 + 1 ;v110[v413]=v280[v282];break;end end end break;end end end elseif (v113<=(104 -45)) then if (v113<=56) then if (v113==55) then v104=v112[3];else v110[v112[2 + 0 ]]=v112[3];end elseif (v113<=57) then local v182=0;local v183;local v184;local v185;local v186;while true do if (v182==2) then for v360=v183,v105 do v186=v186 + 1 ;v110[v360]=v184[v186];end break;end if (v182==1) then v105=(v185 + v183) -(19 -(10 + 8)) ;v186=0;v182=2;end if (v182==0) then v183=v112[793 -(368 + 423) ];v184,v185=v103(v110[v183](v21(v110,v183 + 1 ,v112[9 -6 ])));v182=1;end end elseif (v113>58) then v110[v112[2]][v112[11 -8 ]]=v112[4];else do return v110[v112[2]]();end end elseif (v113<=62) then if (v113<=(502 -(416 + 26))) then local v187=0;local v188;while true do if (0==v187) then v188=v112[6 -4 ];v110[v188](v21(v110,v188 + 1 ,v112[2 + 1 ]));break;end end elseif (v113==61) then v110[v112[2]][v110[v112[4 -1 ]]]=v112[4];elseif (v110[v112[2]]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=63) then if (v110[v112[2]]==v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113==64) then local v288=0;local v289;while true do if (0==v288) then v289=v112[2];v110[v289](v21(v110,v289 + 1 ,v112[3]));break;end end else v110[v112[2]][v110[v112[3]]]=v110[v112[4]];end elseif (v113<=76) then if (v113<=70) then if (v113<=67) then if (v113>(504 -(145 + 293))) then v110[v112[2]]= #v110[v112[3]];elseif  not v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=68) then local v190=0;local v191;while true do if (v190==0) then v191=v112[2];v110[v191](v110[v191 + (431 -(44 + 386)) ]);break;end end elseif (v113==69) then v110[v112[2]]();else do return;end end elseif (v113<=73) then if (v113<=71) then local v192=0;local v193;while true do if (v192==0) then v193=v112[2];v110[v193](v110[v193 + 1 ]);break;end end elseif (v113>72) then v110[v112[2]]=v41(v101[v112[3]],nil,v58);else v110[v112[2]][v110[v112[3]]]=v112[1490 -(998 + 488) ];end elseif (v113<=74) then v110[v112[1 + 1 ]]=v110[v112[3]][v112[4]];elseif (v113==75) then local v296=0;local v297;local v298;while true do if (1==v296) then for v415=1, #v109 do local v416=0;local v417;while true do if (v416==0) then v417=v109[v415];for v442=0, #v417 do local v443=0;local v444;local v445;local v446;while true do if (v443==1) then v446=v444[2];if ((v445==v110) and (v446>=v297)) then local v462=0;while true do if (0==v462) then v298[v446]=v445[v446];v444[773 -(201 + 571) ]=v298;break;end end end break;end if (0==v443) then v444=v417[v442];v445=v444[1];v443=1;end end end break;end end end break;end if (v296==0) then v297=v112[2 + 0 ];v298={};v296=1;end end else local v299=0;local v300;while true do if (v299==0) then v300=v112[2];v110[v300]=v110[v300]();break;end end end elseif (v113<=81) then if (v113<=(1216 -(116 + 1022))) then if (v113==77) then if v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end else local v196=v112[2];do return v110[v196](v21(v110,v196 + 1 ,v112[12 -9 ]));end end elseif (v113<=(47 + 32)) then for v213=v112[2],v112[3] do v110[v213]=nil;end elseif (v113==80) then local v302=0;local v303;local v304;local v305;local v306;while true do if (0==v302) then v303=v112[2];v304,v305=v103(v110[v303](v21(v110,v303 + (3 -2) ,v105)));v302=1;end if (v302==1) then v105=(v305 + v303) -1 ;v306=0;v302=2;end if (v302==2) then for v418=v303,v105 do v306=v306 + 1 ;v110[v418]=v304[v306];end break;end end else local v307=0;local v308;local v309;local v310;local v311;while true do if (v307==1) then v105=(v310 + v308) -1 ;v311=0;v307=2;end if (v307==0) then v308=v112[7 -5 ];v309,v310=v103(v110[v308](v110[v308 + 1 ]));v307=1;end if (2==v307) then for v421=v308,v105 do local v422=0;while true do if (v422==0) then v311=v311 + 1 ;v110[v421]=v309[v311];break;end end end break;end end end elseif (v113<=(943 -(814 + 45))) then if (v113<=82) then local v197=0;local v198;while true do if (0==v197) then v198=v112[2];v110[v198]=v110[v198](v21(v110,v198 + 1 ,v112[7 -4 ]));break;end end elseif (v113==83) then v110[v112[2]]=v112[3] + v110[v112[4]] ;else local v313=0;local v314;while true do if (v313==0) then v314=v112[2];do return v21(v110,v314,v105);end break;end end end elseif (v113<=85) then do return;end elseif (v113>86) then v110[v112[2]]=v112[3] + v110[v112[1 + 3 ]] ;else local v316=0;local v317;local v318;while true do if (1==v316) then v110[v317 + 1 ]=v318;v110[v317]=v318[v112[4]];break;end if (v316==0) then v317=v112[2];v318=v110[v112[3]];v316=1;end end end v104=v104 + 1 ;break;end if (v118==0) then v112=v100[v104];v113=v112[1];v118=1;end end end end;end end end return v41(v40(),{},v28)(...);end if (v29==4) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v63={};local v64={};local v65={};local v66={v63,v64,nil,v65};local v67=v35();local v68={};for v81=1,v67 do local v82=0;local v83;local v84;while true do if (v82==1) then if (v83==1) then v84=v33()~=0 ;elseif (v83==2) then v84=v36();elseif (v83==(930 -(214 + 713))) then v84=v37();end v68[v81]=v84;break;end if (0==v82) then v83=v33();v84=nil;v82=1;end end end v66[3]=v33();for v85=1,v35() do local v86=0;local v87;while true do if (v86==0) then v87=v33();if (v32(v87,1,1)==0) then local v120=v32(v87,2,3);local v121=v32(v87,4,6);local v122={v34(),v34(),nil,nil};if (v120==(0 + 0)) then local v131=0;while true do if (v131==0) then v122[3]=v34();v122[4]=v34();break;end end elseif (v120==1) then v122[3]=v35();elseif (v120==2) then v122[3]=v35() -(2^16) ;elseif (v120==3) then v122[3]=v35() -(2^(893 -(282 + 595))) ;v122[4]=v34();end if (v32(v121,1,1)==1) then v122[2]=v68[v122[2]];end if (v32(v121,2,2)==1) then v122[3]=v68[v122[3]];end if (v32(v121,3,3)==1) then v122[4]=v68[v122[4]];end v63[v85]=v122;end break;end end end for v88=1638 -(1523 + 114) ,v35() do v64[v88-1 ]=v40();end return v66;end v29=5;end if (v29==3) then function v36()local v70=0;local v71;local v72;local v73;local v74;local v75;local v76;while true do if (v70==2) then v75=v32(v72,21,31);v76=((v32(v72,32)==1) and  -1) or 1 ;v70=3;end if (v70==0) then v71=v35();v72=v35();v70=1;end if (v70==3) then if (v75==0) then if (v74==0) then return v76 * 0 ;else v75=1;v73=0;end elseif (v75==2047) then return ((v74==0) and (v76 * (1/0))) or (v76 * NaN) ;end return v16(v76,v75-1023 ) * (v73 + (v74/(2^(983 -(857 + 74))))) ;end if (1==v70) then v73=1;v74=(v32(v72,2 -1 ,20) * ((621 -(555 + 64))^32)) + v71 ;v70=2;end end end v37=nil;function v37(v77)local v78=0;local v79;local v80;while true do if (2==v78) then v80={};for v115=1, #v79 do v80[v115]=v10(v9(v11(v79,v115,v115)));end v78=3;end if (v78==3) then return v14(v80);end if (v78==1) then v79=v11(v27,v30,(v30 + v77) -1 );v30=v30 + v77 ;v78=2;end if (v78==0) then v79=nil;if  not v77 then local v119=0;while true do if (v119==0) then v77=v35();if (v77==0) then return "";end break;end end end v78=1;end end end v38=v35;v29=4;end end end vv17(),...);
--[[
OBFUSCATE BY [Delete User]#4238
-------------------------------
]]--
