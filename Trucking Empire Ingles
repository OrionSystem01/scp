local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=1;local v30;v27=v12(v11(v27,5),v7("\227\81","\78\205\127\59\211\72\111\156"),function(v42)if (v9(v42,2)==79) then local v80=0;while true do if (v80==0) then v30=v8(v11(v42,1,1));return "";end end else local v81=v10(v8(v42,16));if v30 then local v89=v13(v81,v30);v30=nil;return v89;else return v81;end end end);local function v31(v43,v44,v45)if v45 then local v82=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-(2 -1))) + 1)) ;return v82-(v82%1) ;else local v83=0;local v84;while true do if (v83==0) then v84=2^(v44-1) ;return (((v43%(v84 + v84))>=v84) and 1) or 0 ;end end end end local function v32()local v46=0;local v47;while true do if (v46==1) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33()local v48,v49=v9(v27,v29,v29 + (5 -3) );v29=v29 + (3 -1) ;return (v49 * 256) + v48 ;end local function v34()local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35()local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (1==v55) then v58=1;v59=(v31(v57,1,20) * (2^(82 -50))) + v56 ;v55=2;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,32)==1) and  -1) or 1 ;v55=3;end if (v55==3) then if (v60==0) then if (v59==0) then return v61 * (619 -(555 + 64)) ;else v60=1;v58=931 -(857 + 74) ;end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end end end local function v36(v62)local v63=0;local v64;local v65;while true do if (v63==0) then v64=nil;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=1;end if (v63==2) then v65={};for v90=1, #v64 do v65[v90]=v10(v9(v11(v64,v90,v90)));end v63=3;end if (v63==3) then return v14(v65);end if (v63==1) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end end end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v66=0;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (v66==2) then for v92=1,v71 do local v93=0;local v94;local v95;while true do if (0==v93) then v94=v32();v95=nil;v93=1;end if (v93==1) then if (v94==1) then v95=v32()~=0 ;elseif (v94==2) then v95=v35();elseif (v94==(571 -(367 + 201))) then v95=v36();end v72[v92]=v95;break;end end end v70[3]=v32();for v96=1,v34() do local v97=v32();if (v31(v97,1,1)==0) then local v116=0;local v117;local v118;local v119;while true do if (3==v116) then if (v31(v118,3,3)==1) then v119[4]=v72[v119[4]];end v67[v96]=v119;break;end if (v116==1) then v119={v33(),v33(),nil,nil};if (v117==0) then v119[3]=v33();v119[4]=v33();elseif (v117==1) then v119[3]=v34();elseif (v117==2) then v119[3]=v34() -(2^16) ;elseif (v117==3) then v119[3]=v34() -(2^16) ;v119[931 -(214 + 713) ]=v33();end v116=2;end if (v116==2) then if (v31(v118,1,1)==(1 + 0)) then v119[2]=v72[v119[2]];end if (v31(v118,2,2)==1) then v119[3]=v72[v119[1 + 2 ]];end v116=3;end if (v116==0) then v117=v31(v97,2,3);v118=v31(v97,4,6);v116=1;end end end end v66=3;end if (v66==3) then for v98=1,v34() do v68[v98-(878 -(282 + 595)) ]=v39();end return v70;end if (v66==1) then v70={v67,v68,nil,v69};v71=v34();v72={};v66=2;end if (0==v66) then v67={};v68={};v69={};v66=1;end end end local function v40(v73,v74,v75)local v76=0;local v77;local v78;local v79;while true do if (v76==1) then v79=v73[3];return function(...)local v100=v77;local v101=v78;local v102=v79;local v103=v38;local v104=1;local v105= -1;local v106={};local v107={...};local v108=v20("#",...) -1 ;local v109={};local v110={};for v114=0 + 0 ,v108 do if (v114>=v102) then v106[v114-v102 ]=v107[v114 + 1 ];else v110[v114]=v107[v114 + 1 ];end end local v111=(v108-v102) + 1 ;local v112;local v113;while true do local v115=0;while true do if (v115==1) then if (v113<=43) then if (v113<=21) then if (v113<=10) then if (v113<=(5 -1)) then if (v113<=1) then if (v113==0) then local v140=v112[2];v110[v140]=v110[v140](v21(v110,v140 + 1 ,v105));else local v142=v112[1067 -(68 + 997) ];v110[v142]=v110[v142]();end elseif (v113<=(1272 -(226 + 1044))) then local v144=v112[2];local v145=v110[v144];local v146=v110[v144 + 2 ];if (v146>0) then if (v145>v110[v144 + 1 ]) then v104=v112[3];else v110[v144 + 3 ]=v145;end elseif (v145<v110[v144 + 1 ]) then v104=v112[3];else v110[v144 + 3 ]=v145;end elseif (v113==3) then local v218=0;local v219;local v220;while true do if (v218==0) then v219=v112[2];v220=v110[v219];v218=1;end if (1==v218) then for v369=v219 + 1 ,v105 do v15(v220,v110[v369]);end break;end end else v110[v112[2]]=v110[v112[3]] + v112[17 -13 ] ;end elseif (v113<=7) then if (v113<=5) then if v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end elseif (v113==6) then local v223=v112[2];v110[v223](v21(v110,v223 + 1 ,v112[3]));else for v305=v112[2],v112[3] do v110[v305]=nil;end end elseif (v113<=8) then local v147=v101[v112[120 -(32 + 85) ]];local v148;local v149={};v148=v18({},{[v7("\18\113\142\237\66\69\81","\41\77\46\231\131\38\32")]=function(v207,v208)local v209=v149[v208];return v209[1][v209[2]];end,[v7("\137\142\84\75\0\56\166\80\179\169","\52\214\209\58\46\119\81\200")]=function(v210,v211,v212)local v213=0;local v214;while true do if (v213==0) then v214=v149[v211];v214[1][v214[2]]=v212;break;end end end});for v215=1,v112[4] do local v216=0;local v217;while true do if (v216==1) then if (v217[1 + 0 ]==76) then v149[v215-1 ]={v110,v217[3]};else v149[v215-1 ]={v74,v217[3]};end v109[ #v109 + 1 ]=v149;break;end if (v216==0) then v104=v104 + 1 ;v217=v100[v104];v216=1;end end end v110[v112[2]]=v40(v147,v148,v75);elseif (v113>9) then local v224=v112[2];do return v110[v224](v21(v110,v224 + 1 ,v112[3]));end else v110[v112[2]]=v110[v112[3]]%v112[4] ;end elseif (v113<=15) then if (v113<=12) then if (v113>11) then local v151=0;local v152;while true do if (v151==0) then v152=v112[2];v110[v152](v110[v152 + (2 -1) ]);break;end end else v110[v112[2]][v110[v112[3]]]=v112[4];end elseif (v113<=13) then v110[v112[2]]=v110[v112[3]]%v110[v112[4]] ;elseif (v113==14) then local v226=v112[2];local v227,v228=v103(v110[v226](v21(v110,v226 + 1 ,v112[3])));v105=(v228 + v226) -1 ;local v229=0 -0 ;for v308=v226,v105 do local v309=0;while true do if (v309==0) then v229=v229 + 1 ;v110[v308]=v227[v229];break;end end end elseif  not v110[v112[2]] then v104=v104 + 1 ;else v104=v112[3];end elseif (v113<=18) then if (v113<=16) then local v156=v112[2];do return v110[v156](v21(v110,v156 + 1 ,v112[3]));end elseif (v113==17) then local v230=0;local v231;local v232;local v233;local v234;while true do if (1==v230) then v105=(v233 + v231) -1 ;v234=0;v230=2;end if (v230==2) then for v374=v231,v105 do v234=v234 + 1 ;v110[v374]=v232[v234];end break;end if (v230==0) then v231=v112[2];v232,v233=v103(v110[v231](v21(v110,v231 + (1 -0) ,v105)));v230=1;end end else local v235=0;local v236;local v237;local v238;local v239;while true do if (v235==0) then v236=v112[2];v237,v238=v103(v110[v236](v21(v110,v236 + 1 ,v105)));v235=1;end if (v235==1) then v105=(v238 + v236) -1 ;v239=0;v235=2;end if (v235==2) then for v377=v236,v105 do local v378=0;while true do if (v378==0) then v239=v239 + 1 ;v110[v377]=v237[v239];break;end end end break;end end end elseif (v113<=19) then local v157=v112[2];v110[v157](v21(v110,v157 + 1 ,v105));elseif (v113==20) then v110[v112[2]]={};else v110[v112[2]]=v110[v112[3]][v112[4]];end elseif (v113<=32) then if (v113<=26) then if (v113<=23) then if (v113==(372 -(87 + 263))) then v110[v112[2]][v112[3]]=v110[v112[4]];else local v160=v112[2];v110[v160]=v110[v160]();end elseif (v113<=24) then do return;end elseif (v113==25) then for v310=v112[182 -(67 + 113) ],v112[3] do v110[v310]=nil;end else v110[v112[2]]= #v110[v112[3]];end elseif (v113<=29) then if (v113<=27) then v110[v112[2]]=v112[3] + v110[v112[4]] ;elseif (v113>28) then v110[v112[2]]=v74[v112[3]];else local v246=v112[2];v110[v246](v21(v110,v246 + 1 ,v105));end elseif (v113<=30) then if (v110[v112[2 + 0 ]]==v112[4]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113>31) then v110[v112[2]]();else v110[v112[4 -2 ]]=v110[v112[3]]%v110[v112[4]] ;end elseif (v113<=37) then if (v113<=34) then if (v113>(25 + 8)) then if (v110[v112[2]]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end else v110[v112[2]]= #v110[v112[3]];end elseif (v113<=35) then local v164=v112[2];v110[v164](v21(v110,v164 + 1 ,v112[11 -8 ]));elseif (v113==36) then v110[v112[2]][v112[3]]=v110[v112[4]];else v104=v112[3];end elseif (v113<=40) then if (v113<=38) then v110[v112[2]]=v75[v112[3]];elseif (v113==39) then local v253=0;local v254;local v255;while true do if (v253==0) then v254=v112[2];v255={};v253=1;end if (v253==1) then for v379=1, #v109 do local v380=0;local v381;while true do if (v380==0) then v381=v109[v379];for v412=0, #v381 do local v413=0;local v414;local v415;local v416;while true do if (v413==0) then v414=v381[v412];v415=v414[1];v413=1;end if (1==v413) then v416=v414[2];if ((v415==v110) and (v416>=v254)) then local v420=0;while true do if (0==v420) then v255[v416]=v415[v416];v414[953 -(802 + 150) ]=v255;break;end end end break;end end end break;end end end break;end end else do return v110[v112[5 -3 ]]();end end elseif (v113<=41) then local v167=0;local v168;local v169;local v170;while true do if (2==v167) then for v336=1,v112[4] do local v337=0;local v338;while true do if (v337==1) then if (v338[1]==76) then v170[v336-1 ]={v110,v338[3]};else v170[v336-1 ]={v74,v338[3]};end v109[ #v109 + 1 ]=v170;break;end if (v337==0) then v104=v104 + 1 + 0 ;v338=v100[v104];v337=1;end end end v110[v112[5 -3 ]]=v40(v168,v169,v75);break;end if (v167==0) then v168=v101[v112[3]];v169=nil;v167=1;end if (1==v167) then v170={};v169=v18({},{[v7("\122\243\63\37\136\181\93","\208\37\172\86\75\236")]=function(v339,v340)local v341=0;local v342;while true do if (0==v341) then v342=v170[v340];return v342[1 -0 ][v342[2]];end end end,[v7("\150\130\225\142\187\160\179\235\142\180","\204\201\221\143\235")]=function(v343,v344,v345)local v346=0;local v347;while true do if (v346==0) then v347=v170[v344];v347[1][v347[2]]=v345;break;end end end});v167=2;end end elseif (v113==42) then local v256=0;local v257;local v258;local v259;local v260;while true do if (v256==1) then v105=(v259 + v257) -1 ;v260=0;v256=2;end if (v256==0) then v257=v112[2];v258,v259=v103(v110[v257](v110[v257 + 1 ]));v256=1;end if (v256==2) then for v382=v257,v105 do local v383=0;while true do if (v383==0) then v260=v260 + 1 ;v110[v382]=v258[v260];break;end end end break;end end else v110[v112[2]]=v112[3] + v110[v112[3 + 1 ]] ;end elseif (v113<=65) then if (v113<=54) then if (v113<=(62 -14)) then if (v113<=45) then if (v113==44) then v110[v112[2]]();else v110[v112[2]]=v112[1190 -(1069 + 118) ];end elseif (v113<=46) then local v173=v112[2];local v174=v110[v173 + 2 ];local v175=v110[v173] + v174 ;v110[v173]=v175;if (v174>0) then if (v175<=v110[v173 + 1 ]) then v104=v112[3];v110[v173 + (6 -3) ]=v175;end elseif (v175>=v110[v173 + 1 ]) then v104=v112[6 -3 ];v110[v173 + 3 ]=v175;end elseif (v113==47) then if (v112[2]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end else v110[v112[2]][v110[v112[3]]]=v110[v112[4]];end elseif (v113<=(9 + 42)) then if (v113<=49) then do return v110[v112[2]]();end elseif (v113>(88 -38)) then local v264=0;local v265;while true do if (v264==0) then v265=v112[2];do return v21(v110,v265,v105);end break;end end else local v266=v112[2];local v267,v268=v103(v110[v266](v21(v110,v266 + 1 ,v112[3])));v105=(v268 + v266) -1 ;local v269=0;for v314=v266,v105 do v269=v269 + 1 ;v110[v314]=v267[v269];end end elseif (v113<=52) then v110[v112[2]]=v112[3]~=0 ;elseif (v113==53) then do return;end else local v270=v112[2];local v271=v110[v270];for v317=v270 + 1 ,v105 do v15(v271,v110[v317]);end end elseif (v113<=59) then if (v113<=(56 + 0)) then if (v113>55) then v110[v112[793 -(368 + 423) ]]=v110[v112[3]]%v112[4] ;else local v179=0;local v180;while true do if (v179==0) then v180=v112[2];v110[v180](v110[v180 + (3 -2) ]);break;end end end elseif (v113<=57) then if (v112[2]==v110[v112[4]]) then v104=v104 + 1 ;else v104=v112[3];end elseif (v113==58) then v110[v112[2]]=v75[v112[3]];else v110[v112[2]][v112[3]]=v112[4];end elseif (v113<=62) then if (v113<=60) then local v181=v112[2];local v182=v110[v112[21 -(10 + 8) ]];v110[v181 + 1 ]=v182;v110[v181]=v182[v112[4]];elseif (v113==61) then v110[v112[2]][v110[v112[11 -8 ]]]=v110[v112[4]];else v110[v112[2]][v110[v112[3]]]=v112[4];end elseif (v113<=(505 -(416 + 26))) then local v186=0;local v187;local v188;while true do if (v186==0) then v187=v112[2];v188=v110[v112[3]];v186=1;end if (1==v186) then v110[v187 + 1 ]=v188;v110[v187]=v188[v112[4]];break;end end elseif (v113>64) then if v110[v112[2]] then v104=v104 + 1 ;else v104=v112[9 -6 ];end else v110[v112[2]]=v40(v101[v112[3]],nil,v75);end elseif (v113<=76) then if (v113<=70) then if (v113<=67) then if (v113==66) then v110[v112[2]][v112[3]]=v112[4];elseif (v110[v112[2]]==v112[4]) then v104=v104 + 1 + 0 ;else v104=v112[4 -1 ];end elseif (v113<=68) then v110[v112[440 -(145 + 293) ]]=v112[3]~=0 ;elseif (v113>69) then v110[v112[2]]={};else v110[v112[432 -(44 + 386) ]]=v74[v112[3]];end elseif (v113<=73) then if (v113<=(1557 -(998 + 488))) then local v192=v112[2];local v193=v110[v192 + 1 + 1 ];local v194=v110[v192] + v193 ;v110[v192]=v194;if (v193>0) then if (v194<=v110[v192 + 1 + 0 ]) then v104=v112[3];v110[v192 + 3 ]=v194;end elseif (v194>=v110[v192 + 1 ]) then v104=v112[3];v110[v192 + 3 ]=v194;end elseif (v113>72) then local v286=0;local v287;local v288;local v289;local v290;while true do if (v286==1) then v105=(v289 + v287) -1 ;v290=0;v286=2;end if (v286==2) then for v384=v287,v105 do v290=v290 + (773 -(201 + 571)) ;v110[v384]=v288[v290];end break;end if (v286==0) then v287=v112[2];v288,v289=v103(v110[v287](v110[v287 + 1 ]));v286=1;end end elseif  not v110[v112[2]] then v104=v104 + (1139 -(116 + 1022)) ;else v104=v112[3];end elseif (v113<=74) then local v196=0;local v197;while true do if (v196==0) then v197=v112[2];v110[v197]=v110[v197](v21(v110,v197 + 1 ,v112[3]));break;end end elseif (v113==75) then v104=v112[3];else v110[v112[2]]=v110[v112[3]];end elseif (v113<=(337 -256)) then if (v113<=78) then if (v113>77) then local v198=v112[2];v110[v198]=v110[v198](v21(v110,v198 + 1 ,v112[3]));else v110[v112[2]]=v110[v112[3]] + v112[4] ;end elseif (v113<=79) then local v201=0;local v202;while true do if (v201==0) then v202=v112[2];do return v21(v110,v202,v105);end break;end end elseif (v113>80) then if (v110[v112[2]]==v110[v112[3 + 1 ]]) then v104=v104 + (3 -2) ;else v104=v112[10 -7 ];end else v110[v112[2]]=v40(v101[v112[3]],nil,v75);end elseif (v113<=84) then if (v113<=82) then v110[v112[2]]=v112[3];elseif (v113==83) then local v295=v112[2];v110[v295]=v110[v295](v21(v110,v295 + 1 ,v105));else v110[v112[2]]=v110[v112[3]];end elseif (v113<=85) then v110[v112[2]]=v110[v112[3]][v112[4]];elseif (v113==86) then local v299=v112[2];local v300=v110[v299];local v301=v110[v299 + 2 ];if (v301>0) then if (v300>v110[v299 + 1 ]) then v104=v112[3];else v110[v299 + 3 ]=v300;end elseif (v300<v110[v299 + 1 ]) then v104=v112[3];else v110[v299 + 3 ]=v300;end else local v302=0;local v303;local v304;while true do if (v302==0) then v303=v112[2];v304={};v302=1;end if (v302==1) then for v391=1, #v109 do local v392=v109[v391];for v398=0, #v392 do local v399=v392[v398];local v400=v399[1];local v401=v399[2];if ((v400==v110) and (v401>=v303)) then v304[v401]=v400[v401];v399[1]=v304;end end end break;end end end v104=v104 + (860 -(814 + 45)) ;break;end if (v115==0) then v112=v100[v104];v113=v112[1];v115=1;end end end end;end if (v76==0) then v77=v73[1638 -(1523 + 114) ];v78=v73[2];v76=1;end end end return v40(v39(),{},v28)(...);end vv17(),...);
--[[
OBFUSCATE BY [Delete User]#4238
-------------------------------
]]--
