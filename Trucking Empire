--[[
OBFUSCATE BY [Delete User]#4238
-------------------------------
]]--
local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=2 -1 ;local v30;v27=v12(v11(v27,5),v7("\89\127","\46\119\81\200"),function(v42)if (v9(v42,2)==79) then local v100=0;while true do if (v100==0) then v30=v8(v11(v42,1,1));return "";end end else local v101=0;local v102;while true do if (v101==0) then v102=v10(v8(v42,16));if v30 then local v131=v13(v102,v30);v30=nil;return v131;else return v102;end break;end end end end);local function v31(v43,v44,v45)if v45 then local v103=0;local v104;while true do if (v103==0) then v104=(v43/(2^(v44-1)))%(2^(((v45-1) -(v44-1)) + 1)) ;return v104-(v104%1) ;end end else local v105=2^(v44-1) ;return (((v43%(v105 + v105))>=v105) and 1) or 0 ;end end local function v32()local v46=v9(v27,v29,v29);v29=v29 + (2 -1) ;return v46;end local function v33()local v47=0;local v48;local v49;while true do if (v47==1) then return (v49 * 256) + v48 ;end if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end end end local function v34()local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==1) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35()local v55=v34();local v56=v34();local v57=1;local v58=(v31(v56,1 -0 ,51 -31 ) * (2^(651 -(555 + 64)))) + v55 ;local v59=v31(v56,21,31);local v60=((v31(v56,32)==1) and  -(932 -(857 + 74))) or 1 ;if (v59==0) then if (v58==0) then return v60 * 0 ;else local v112=0;while true do if (v112==0) then v59=1;v57=0;break;end end end elseif (v59==(2615 -(367 + 201))) then return ((v58==0) and (v60 * (1/0))) or (v60 * NaN) ;end return v16(v60,v59-1023 ) * (v57 + (v58/((929 -(214 + 713))^52))) ;end local function v36(v61)local v62=0;local v63;local v64;while true do if (v62==0) then v63=nil;if  not v61 then local v120=0;while true do if (0==v120) then v61=v34();if (v61==(0 + 0)) then return "";end break;end end end v62=1;end if (1==v62) then v63=v11(v27,v29,(v29 + v61) -1 );v29=v29 + v61 ;v62=2;end if (v62==3) then return v14(v64);end if (2==v62) then v64={};for v113=1, #v63 do v64[v113]=v10(v9(v11(v63,v113,v113)));end v62=3;end end end local v37=v34;local function v38(...)return {...},v20("#",...);end local function v39()local v65={};local v66={};local v67={};local v68={v65,v66,nil,v67};local v69=v34();local v70={};for v78=1,v69 do local v79=0;local v80;local v81;while true do if (v79==0) then v80=v32();v81=nil;v79=1;end if (v79==1) then if (v80==1) then v81=v32()~=0 ;elseif (v80==(1 + 1)) then v81=v35();elseif (v80==3) then v81=v36();end v70[v78]=v81;break;end end end v68[3]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,1,1)==0) then local v108=v31(v83,879 -(282 + 595) ,3);local v109=v31(v83,4,6);local v110={v33(),v33(),nil,nil};if (v108==0) then v110[3 + 0 ]=v33();v110[4]=v33();elseif (v108==1) then v110[3]=v34();elseif (v108==2) then v110[3 -0 ]=v34() -(2^(1081 -(68 + 997))) ;elseif (v108==3) then v110[3]=v34() -((1272 -(226 + 1044))^16) ;v110[4]=v33();end if (v31(v109,1,1)==1) then v110[2]=v70[v110[2]];end if (v31(v109,2,2)==1) then v110[3]=v70[v110[12 -9 ]];end if (v31(v109,3,3)==1) then v110[4]=v70[v110[4]];end v65[v82]=v110;end end for v84=118 -(32 + 85) ,v34() do v66[v84-1 ]=v39();end return v68;end local function v40(v72,v73,v74)local v75=v72[1 + 0 ];local v76=v72[2];local v77=v72[3];return function(...)local v86=v75;local v87=v76;local v88=v77;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v106=0,v94 do if (v106>=v88) then v92[v106-v88 ]=v93[v106 + (958 -(892 + 65)) ];else v96[v106]=v93[v106 + (2 -1) ];end end local v97=(v94-v88) + 1 ;local v98;local v99;while true do local v107=0;while true do if (v107==0) then v98=v86[v90];v99=v98[1];v107=1;end if (v107==1) then if (v99<=43) then if (v99<=21) then if (v99<=10) then if (v99<=4) then if (v99<=1) then if (v99>0) then v96[v98[2]][v96[v98[3]]]=v98[4];elseif  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=2) then local v138=0;local v139;local v140;local v141;local v142;while true do if (v138==2) then for v309=v139,v91 do local v310=0;while true do if (0==v310) then v142=v142 + 1 ;v96[v309]=v140[v142];break;end end end break;end if (v138==0) then v139=v98[2];v140,v141=v89(v96[v139](v21(v96,v139 + (1 -0) ,v91)));v138=1;end if (v138==1) then v91=(v141 + v139) -1 ;v142=0;v138=2;end end elseif (v99==3) then v96[v98[2]]=v96[v98[3]] + v98[4] ;else local v203=v98[3 -1 ];v96[v203](v21(v96,v203 + 1 ,v91));end elseif (v99<=7) then if (v99<=5) then local v143=0;local v144;local v145;while true do if (v143==1) then for v311=1, #v95 do local v312=0;local v313;while true do if (v312==0) then v313=v95[v311];for v402=0, #v313 do local v403=0;local v404;local v405;local v406;while true do if (v403==1) then v406=v404[2];if ((v405==v96) and (v406>=v144)) then local v434=0;while true do if (v434==0) then v145[v406]=v405[v406];v404[1]=v145;break;end end end break;end if (0==v403) then v404=v313[v402];v405=v404[1];v403=1;end end end break;end end end break;end if (v143==0) then v144=v98[2];v145={};v143=1;end end elseif (v99>6) then local v204=0;local v205;local v206;local v207;local v208;while true do if (v204==1) then v91=(v207 + v205) -1 ;v208=0;v204=2;end if (2==v204) then for v358=v205,v91 do local v359=0;while true do if (v359==0) then v208=v208 + 1 ;v96[v358]=v206[v208];break;end end end break;end if (v204==0) then v205=v98[2];v206,v207=v89(v96[v205](v21(v96,v205 + 1 ,v91)));v204=1;end end else local v209=0;local v210;while true do if (0==v209) then v210=v98[2];do return v21(v96,v210,v91);end break;end end end elseif (v99<=8) then v96[v98[2]]={};elseif (v99==9) then v96[v98[2]]=v98[353 -(87 + 263) ];else local v213=0;local v214;local v215;local v216;while true do if (v213==2) then for v360=1,v98[4] do v90=v90 + 1 ;local v361=v86[v90];if (v361[1]==44) then v216[v360-1 ]={v96,v361[3]};else v216[v360-1 ]={v73,v361[3]};end v95[ #v95 + (181 -(67 + 113)) ]=v216;end v96[v98[2]]=v40(v214,v215,v74);break;end if (v213==1) then v216={};v215=v18({},{[v7("\122\243\63\37\136\181\93","\208\37\172\86\75\236")]=function(v363,v364)local v365=0;local v366;while true do if (v365==0) then v366=v216[v364];return v366[1][v366[2]];end end end,[v7("\150\130\225\142\187\160\179\235\142\180","\204\201\221\143\235")]=function(v367,v368,v369)local v370=0;local v371;while true do if (v370==0) then v371=v216[v368];v371[1][v371[2]]=v369;break;end end end});v213=2;end if (v213==0) then v214=v87[v98[3]];v215=nil;v213=1;end end end elseif (v99<=15) then if (v99<=12) then if (v99==11) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3 + 0 ];end else v96[v98[2]]=v98[3] + v96[v98[4]] ;end elseif (v99<=13) then local v148=v98[2];v96[v148](v21(v96,v148 + 1 ,v98[3]));elseif (v99>14) then v96[v98[2]][v96[v98[3]]]=v96[v98[4]];else do return;end end elseif (v99<=18) then if (v99<=16) then if (v96[v98[2]]==v98[4]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==17) then v96[v98[4 -2 ]]=v96[v98[3]]%v96[v98[4]] ;else v96[v98[2 + 0 ]]=v96[v98[3]] + v98[4] ;end elseif (v99<=19) then v96[v98[2]]=v96[v98[3]];elseif (v99>20) then local v223=v98[2];v96[v223](v96[v223 + (3 -2) ]);else local v224=0;local v225;local v226;local v227;while true do if (v224==0) then v225=v98[2];v226=v96[v225 + 2 ];v224=1;end if (v224==1) then v227=v96[v225] + v226 ;v96[v225]=v227;v224=2;end if (2==v224) then if (v226>0) then if (v227<=v96[v225 + 1 ]) then local v420=0;while true do if (v420==0) then v90=v98[3];v96[v225 + (955 -(802 + 150)) ]=v227;break;end end end elseif (v227>=v96[v225 + 1 ]) then local v421=0;while true do if (v421==0) then v90=v98[3];v96[v225 + 3 ]=v227;break;end end end break;end end end elseif (v99<=32) then if (v99<=(69 -43)) then if (v99<=23) then if (v99>22) then local v151=0;local v152;while true do if (0==v151) then v152=v98[2];do return v96[v152](v21(v96,v152 + 1 ,v98[5 -2 ]));end break;end end else local v153=v98[2];local v154=v96[v98[3]];v96[v153 + 1 ]=v154;v96[v153]=v154[v98[4]];end elseif (v99<=24) then v96[v98[2]]=v74[v98[3]];elseif (v99>25) then local v228=0;local v229;while true do if (v228==0) then v229=v98[2];v96[v229]=v96[v229]();break;end end else local v230=v98[2];local v231=v96[v230];local v232=v96[v230 + 2 ];if (v232>0) then if (v231>v96[v230 + 1 ]) then v90=v98[3];else v96[v230 + 3 ]=v231;end elseif (v231<v96[v230 + 1 ]) then v90=v98[3];else v96[v230 + 3 ]=v231;end end elseif (v99<=29) then if (v99<=27) then local v160=0;local v161;while true do if (v160==0) then v161=v98[2 + 0 ];v96[v161](v21(v96,v161 + 1 ,v91));break;end end elseif (v99==(1025 -(915 + 82))) then v96[v98[2]]=v96[v98[3]][v98[4]];else for v300=v98[2],v98[3] do v96[v300]=nil;end end elseif (v99<=30) then if (v98[2]==v96[v98[11 -7 ]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==31) then local v236=0;local v237;while true do if (v236==0) then v237=v98[2];v96[v237]=v96[v237](v21(v96,v237 + 1 ,v98[3]));break;end end elseif v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=37) then if (v99<=34) then if (v99>33) then v96[v98[2]]= #v96[v98[3]];else local v163=0;local v164;local v165;while true do if (v163==1) then for v315=1, #v95 do local v316=0;local v317;while true do if (v316==0) then v317=v95[v315];for v409=0, #v317 do local v410=v317[v409];local v411=v410[1];local v412=v410[2];if ((v411==v96) and (v412>=v164)) then local v426=0;while true do if (v426==0) then v165[v412]=v411[v412];v410[1]=v165;break;end end end end break;end end end break;end if (0==v163) then v164=v98[2];v165={};v163=1;end end end elseif (v99<=35) then local v166=v98[2];local v167=v96[v166 + 2 ];local v168=v96[v166] + v167 ;v96[v166]=v168;if (v167>0) then if (v168<=v96[v166 + 1 ]) then local v318=0;while true do if (v318==0) then v90=v98[2 + 1 ];v96[v166 + 3 ]=v168;break;end end end elseif (v168>=v96[v166 + 1 ]) then v90=v98[3];v96[v166 + 3 ]=v168;end elseif (v99==36) then do return v96[v98[2]]();end else v96[v98[2]][v98[3 -0 ]]=v96[v98[4]];end elseif (v99<=40) then if (v99<=38) then do return;end elseif (v99>39) then local v240=0;local v241;while true do if (v240==0) then v241=v98[2];v96[v241]=v96[v241](v21(v96,v241 + 1 ,v98[3]));break;end end elseif v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=41) then local v170=0;local v171;local v172;local v173;local v174;while true do if (v170==0) then v171=v98[2];v172,v173=v89(v96[v171](v21(v96,v171 + 1 ,v98[3])));v170=1;end if (v170==1) then v91=(v173 + v171) -1 ;v174=0;v170=2;end if (v170==2) then for v322=v171,v91 do v174=v174 + 1 ;v96[v322]=v172[v174];end break;end end elseif (v99>42) then local v242=v98[2];v96[v242](v21(v96,v242 + (1188 -(1069 + 118)) ,v98[3]));else do return v96[v98[4 -2 ]]();end end elseif (v99<=65) then if (v99<=54) then if (v99<=(104 -56)) then if (v99<=45) then if (v99==44) then v96[v98[2]]=v96[v98[3]];else v96[v98[2]]();end elseif (v99<=(8 + 38)) then if (v98[2]==v96[v98[4]]) then v90=v90 + (1 -0) ;else v90=v98[3];end elseif (v99==47) then local v244=0;local v245;while true do if (v244==0) then v245=v98[2];v96[v245](v96[v245 + 1 ]);break;end end else local v246=0;local v247;local v248;local v249;local v250;while true do if (v246==1) then v91=(v249 + v247) -(1 + 0) ;v250=0;v246=2;end if (v246==2) then for v376=v247,v91 do v250=v250 + 1 ;v96[v376]=v248[v250];end break;end if (v246==0) then v247=v98[2];v248,v249=v89(v96[v247](v96[v247 + 1 ]));v246=1;end end end elseif (v99<=51) then if (v99<=49) then v96[v98[2]]=v40(v87[v98[3]],nil,v74);elseif (v99>50) then local v251=0;local v252;local v253;local v254;while true do if (v251==1) then v254={};v253=v18({},{[v7("\72\186\247\79\115\128\230","\33\23\229\158")]=function(v379,v380)local v381=v254[v380];return v381[1][v381[2]];end,[v7("\111\133\207\190\71\179\207\191\85\162","\219\48\218\161")]=function(v382,v383,v384)local v385=v254[v383];v385[1][v385[2]]=v384;end});v251=2;end if (2==v251) then for v387=1,v98[4] do v90=v90 + 1 ;local v388=v86[v90];if (v388[1]==44) then v254[v387-1 ]={v96,v388[3]};else v254[v387-1 ]={v73,v388[3]};end v95[ #v95 + 1 ]=v254;end v96[v98[2]]=v40(v252,v253,v74);break;end if (v251==0) then v252=v87[v98[3]];v253=nil;v251=1;end end else v96[v98[2]]=v96[v98[3]]%v98[4] ;end elseif (v99<=52) then local v178=0;local v179;while true do if (v178==0) then v179=v98[2];v96[v179]=v96[v179](v21(v96,v179 + 1 ,v91));break;end end elseif (v99>53) then v96[v98[2]]=v96[v98[3]]%v98[4] ;else local v257=v98[2];v96[v257]=v96[v257](v21(v96,v257 + 1 ,v91));end elseif (v99<=59) then if (v99<=56) then if (v99==(73 -(10 + 8))) then v96[v98[7 -5 ]]=v96[v98[3]][v98[4]];else v96[v98[2]]={};end elseif (v99<=57) then v96[v98[2]]=v98[3];elseif (v99==58) then v96[v98[2]]=v40(v87[v98[3]],nil,v74);else local v260=0;local v261;local v262;while true do if (v260==0) then v261=v98[2];v262=v96[v98[3]];v260=1;end if (1==v260) then v96[v261 + (443 -(416 + 26)) ]=v262;v96[v261]=v262[v98[4]];break;end end end elseif (v99<=62) then if (v99<=60) then local v185=0;local v186;while true do if (v185==0) then v186=v98[2];do return v96[v186](v21(v96,v186 + 1 ,v98[3]));end break;end end elseif (v99==61) then v96[v98[2]]=v98[3]~=0 ;else local v264=v98[2];do return v21(v96,v264,v91);end end elseif (v99<=63) then v96[v98[2]]();elseif (v99==64) then for v307=v98[2],v98[3] do v96[v307]=nil;end else v96[v98[2]]=v98[3]~=0 ;end elseif (v99<=76) then if (v99<=70) then if (v99<=67) then if (v99>66) then v96[v98[2]]=v73[v98[3]];else v96[v98[2]]=v74[v98[9 -6 ]];end elseif (v99<=68) then v96[v98[2]][v98[2 + 1 ]]=v98[6 -2 ];elseif (v99>69) then v96[v98[2]]= #v96[v98[441 -(145 + 293) ]];else local v267=0;local v268;local v269;while true do if (v267==0) then v268=v98[2];v269=v96[v268];v267=1;end if (v267==1) then for v390=v268 + 1 ,v91 do v15(v269,v96[v390]);end break;end end end elseif (v99<=73) then if (v99<=71) then local v193=v98[2];local v194=v96[v193];local v195=v96[v193 + 2 ];if (v195>0) then if (v194>v96[v193 + 1 ]) then v90=v98[3];else v96[v193 + 3 ]=v194;end elseif (v194<v96[v193 + 1 ]) then v90=v98[3];else v96[v193 + 3 ]=v194;end elseif (v99==72) then v96[v98[2]][v98[3]]=v98[4];else v96[v98[2]][v96[v98[3]]]=v96[v98[4]];end elseif (v99<=74) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;elseif (v99==75) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]][v96[v98[3]]]=v98[4];end elseif (v99<=(511 -(44 + 386))) then if (v99<=78) then if (v99>77) then v96[v98[2]]=v98[3] + v96[v98[4]] ;else local v198=v98[2];v96[v198]=v96[v198]();end elseif (v99<=79) then v90=v98[1489 -(998 + 488) ];elseif (v99==80) then local v276=0;local v277;local v278;local v279;local v280;while true do if (2==v276) then for v391=v277,v91 do local v392=0;while true do if (v392==0) then v280=v280 + 1 ;v96[v391]=v278[v280];break;end end end break;end if (v276==1) then v91=(v279 + v277) -1 ;v280=0 + 0 ;v276=2;end if (v276==0) then v277=v98[2];v278,v279=v89(v96[v277](v96[v277 + 1 ]));v276=1;end end else v90=v98[3 + 0 ];end elseif (v99<=(856 -(201 + 571))) then if (v99<=82) then if  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[1141 -(116 + 1022) ];end elseif (v99>83) then v96[v98[2]]=v73[v98[3]];else local v285=0;local v286;local v287;local v288;local v289;while true do if (0==v285) then v286=v98[2];v287,v288=v89(v96[v286](v21(v96,v286 + 1 ,v98[3])));v285=1;end if (v285==2) then for v393=v286,v91 do local v394=0;while true do if (v394==0) then v289=v289 + 1 ;v96[v393]=v287[v289];break;end end end break;end if (v285==1) then v91=(v288 + v286) -1 ;v289=0;v285=2;end end end elseif (v99<=85) then if (v96[v98[2]]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==86) then local v291=0;local v292;local v293;while true do if (0==v291) then v292=v98[2];v293=v96[v292];v291=1;end if (v291==1) then for v395=v292 + 1 ,v91 do v15(v293,v96[v395]);end break;end end else v96[v98[2]][v98[3]]=v96[v98[16 -12 ]];end v90=v90 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end vv17(),...);
