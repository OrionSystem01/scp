local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (0==v29) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\107\99","\205\69\77\136\159\224\199"),function(v43)if (v9(v43,2)==79) then local v79=0;while true do if (0==v79) then v31=v8(v11(v43,1,1));return "";end end else local v80=v10(v8(v43,16));if v31 then local v88=0;local v89;while true do if (v88==0) then v89=v13(v80,v31);v31=nil;v88=1;end if (v88==1) then return v89;end end else return v80;end end end);v29=1;end if (v29==1) then v32=nil;function v32(v44,v45,v46)if v46 then local v81=0;local v82;while true do if (v81==0) then v82=(v44/(2^(v45-1)))%(2^(((v46-(2 -1)) -(v45-1)) + 1)) ;return v82-(v82%(2 -1)) ;end end else local v83=2^(v45-(1 -0)) ;return (((v44%(v83 + v83))>=v83) and (2 -1)) or 0 ;end end v33=nil;v29=2;end if (v29==3) then v35=nil;function v35()local v47,v48,v49,v50=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;return (v50 * 16777216) + (v49 * 65536) + (v48 * 256) + v47 ;end v36=nil;v29=4;end if (v29==4) then function v36()local v51=0;local v52;local v53;local v54;local v55;local v56;local v57;while true do if (v51==2) then v56=v32(v53,589 -(367 + 201) ,31);v57=((v32(v53,32)==1) and  -1) or 1 ;v51=3;end if (v51==3) then if (v56==0) then if (v55==0) then return v57 * 0 ;else local v118=0;while true do if (0==v118) then v56=1;v54=927 -(214 + 713) ;break;end end end elseif (v56==2047) then return ((v55==0) and (v57 * (1/0))) or (v57 * NaN) ;end return v16(v57,v56-1023 ) * (v54 + (v55/(2^52))) ;end if (v51==1) then v54=1;v55=(v32(v53,1,20) * (2^32)) + v52 ;v51=2;end if (0==v51) then v52=v35();v53=v35();v51=1;end end end v37=nil;function v37(v58)local v59=0;local v60;local v61;while true do if (v59==2) then v61={};for v90=1, #v60 do v61[v90]=v10(v9(v11(v60,v90,v90)));end v59=3;end if (v59==3) then return v14(v61);end if (v59==0) then v60=nil;if  not v58 then local v115=0;while true do if (v115==0) then v58=v35();if (v58==0) then return "";end break;end end end v59=1;end if (v59==1) then v60=v11(v27,v30,(v30 + v58) -1 );v30=v30 + v58 ;v59=2;end end end v29=5;end if (v29==2) then function v33()local v62=v9(v27,v30,v30);v30=v30 + 1 ;return v62;end v34=nil;function v34()local v63,v64=v9(v27,v30,v30 + (621 -(555 + 64)) );v30=v30 + 2 ;return (v64 * (1187 -(857 + 74))) + v63 ;end v29=3;end if (7==v29) then function v41(v65,v66,v67)local v68=0;local v69;local v70;local v71;while true do if (v68==0) then v69=v65[1];v70=v65[2];v68=1;end if (1==v68) then v71=v65[3 -0 ];return function(...)local v92=v69;local v93=v70;local v94=v71;local v95=v39;local v96=1066 -(68 + 997) ;local v97= -1;local v98={};local v99={...};local v100=v20("#",...) -1 ;local v101={};local v102={};for v116=0,v100 do if (v116>=v94) then v98[v116-v94 ]=v99[v116 + 1 ];else v102[v116]=v99[v116 + 1 ];end end local v103=(v100-v94) + 1 ;local v104;local v105;while true do local v117=0;while true do if (0==v117) then v104=v92[v96];v105=v104[4 -3 ];v117=1;end if (v117==1) then if (v105<=(164 -(32 + 85))) then if (v105<=23) then if (v105<=11) then if (v105<=5) then if (v105<=2) then if (v105<=0) then local v142=v104[2];v102[v142]=v102[v142]();elseif (v105>1) then v102[v104[2]][v102[v104[3]]]=v102[v104[4]];else v102[v104[2]]=v104[3]~=0 ;end elseif (v105<=3) then if (v102[v104[2]]==v104[4]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105>4) then if v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end else v102[v104[2]]= #v102[v104[3]];end elseif (v105<=8) then if (v105<=6) then local v144=0;local v145;local v146;local v147;while true do if (1==v144) then v147={};v146=v18({},{[v7("\104\77\219\249\247\57\227","\155\55\18\178\151\147\92")]=function(v371,v372)local v373=v147[v372];return v373[1][v373[2]];end,[v7("\179\194\66\55\5\69\116\136\248\84","\26\236\157\44\82\114\44")]=function(v374,v375,v376)local v377=0;local v378;while true do if (v377==0) then v378=v147[v375];v378[1][v378[2]]=v376;break;end end end});v144=2;end if (v144==2) then for v379=1,v104[4] do v96=v96 + 1 ;local v380=v92[v96];if (v380[1]==56) then v147[v379-1 ]={v102,v380[3]};else v147[v379-1 ]={v66,v380[3]};end v101[ #v101 + 1 ]=v147;end v102[v104[2]]=v41(v145,v146,v67);break;end if (v144==0) then v145=v93[v104[3 + 0 ]];v146=nil;v144=1;end end elseif (v105==7) then v102[v104[2]]=v67[v104[3]];else for v336=v104[2],v104[3] do v102[v336]=nil;end end elseif (v105<=9) then local v148=0;local v149;local v150;local v151;while true do if (v148==1) then v151=v102[v149] + v150 ;v102[v149]=v151;v148=2;end if (2==v148) then if (v150>0) then if (v151<=v102[v149 + 1 ]) then local v451=0;while true do if (v451==0) then v96=v104[3];v102[v149 + 3 ]=v151;break;end end end elseif (v151>=v102[v149 + 1 ]) then local v452=0;while true do if (0==v452) then v96=v104[3];v102[v149 + 3 ]=v151;break;end end end break;end if (v148==0) then v149=v104[2];v150=v102[v149 + 2 ];v148=1;end end elseif (v105==10) then v102[v104[2]]= #v102[v104[3]];else local v227=v104[1 + 1 ];v102[v227](v21(v102,v227 + 1 ,v97));end elseif (v105<=17) then if (v105<=14) then if (v105<=12) then if (v102[v104[2]]==v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105>13) then local v229=v104[2];local v230={};for v341=1, #v101 do local v342=0;local v343;while true do if (v342==0) then v343=v101[v341];for v453=0, #v343 do local v454=0;local v455;local v456;local v457;while true do if (0==v454) then v455=v343[v453];v456=v455[1];v454=1;end if (v454==1) then v457=v455[2];if ((v456==v102) and (v457>=v229)) then local v484=0;while true do if (v484==0) then v230[v457]=v456[v457];v455[958 -(892 + 65) ]=v230;break;end end end break;end end end break;end end end else local v231=0;local v232;local v233;local v234;while true do if (v231==0) then v232=v104[2];v233=v102[v232];v231=1;end if (v231==1) then v234=v102[v232 + 2 ];if (v234>0) then if (v233>v102[v232 + 1 ]) then v96=v104[3];else v102[v232 + 3 ]=v233;end elseif (v233<v102[v232 + 1 ]) then v96=v104[3];else v102[v232 + 3 ]=v233;end break;end end end elseif (v105<=15) then local v152=v104[2];do return v102[v152](v21(v102,v152 + 1 ,v104[3]));end elseif (v105>16) then local v235=0;local v236;while true do if (v235==0) then v236=v104[2];v102[v236](v102[v236 + (2 -1) ]);break;end end else v102[v104[2]][v104[3]]=v104[4];end elseif (v105<=20) then if (v105<=(33 -15)) then do return;end elseif (v105==19) then if (v104[2]==v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end else v102[v104[2]]=v102[v104[3]]%v102[v104[4]] ;end elseif (v105<=21) then v102[v104[3 -1 ]]=v66[v104[3]];elseif (v105==22) then local v240=0;local v241;while true do if (v240==0) then v241=v104[2];v102[v241]=v102[v241](v102[v241 + 1 ]);break;end end elseif (v102[v104[2]]<v104[4]) then v96=v96 + (351 -(87 + 263)) ;else v96=v104[3];end elseif (v105<=35) then if (v105<=(209 -(67 + 113))) then if (v105<=26) then if (v105<=24) then local v155=0;local v156;local v157;local v158;local v159;while true do if (0==v155) then v156=v104[2];v157,v158=v95(v102[v156](v21(v102,v156 + 1 ,v104[3])));v155=1;end if (v155==1) then v97=(v158 + v156) -1 ;v159=0;v155=2;end if (v155==2) then for v384=v156,v97 do local v385=0;while true do if (0==v385) then v159=v159 + 1 ;v102[v384]=v157[v159];break;end end end break;end end elseif (v105>25) then v102[v104[2]]=v66[v104[3]];else do return;end end elseif (v105<=27) then local v160=v104[2];local v161=v104[4];local v162=v160 + 2 ;local v163={v102[v160](v102[v160 + 1 ],v102[v162])};for v209=1,v161 do v102[v162 + v209 ]=v163[v209];end local v164=v163[1];if v164 then local v244=0;while true do if (v244==0) then v102[v162]=v164;v96=v104[3];break;end end else v96=v96 + 1 ;end elseif (v105==28) then v102[v104[2]]=v104[3];else local v247=0;local v248;local v249;local v250;local v251;while true do if (2==v247) then for v435=v248,v97 do local v436=0;while true do if (v436==0) then v251=v251 + 1 ;v102[v435]=v249[v251];break;end end end break;end if (v247==1) then v97=(v250 + v248) -1 ;v251=0;v247=2;end if (v247==0) then v248=v104[2];v249,v250=v95(v102[v248](v21(v102,v248 + 1 ,v97)));v247=1;end end end elseif (v105<=32) then if (v105<=(22 + 8)) then local v165=0;local v166;local v167;local v168;while true do if (0==v165) then v166=v104[4 -2 ];v167={v102[v166](v21(v102,v166 + 1 ,v97))};v165=1;end if (1==v165) then v168=0;for v386=v166,v104[4] do local v387=0;while true do if (v387==0) then v168=v168 + 1 ;v102[v386]=v167[v168];break;end end end break;end end elseif (v105==31) then local v252=0;local v253;while true do if (v252==0) then v253=v104[2];v102[v253]=v102[v253](v21(v102,v253 + 1 ,v104[3]));break;end end else local v254=v104[2];local v255=v102[v254];local v256=v102[v254 + 2 ];if (v256>0) then if (v255>v102[v254 + 1 + 0 ]) then v96=v104[3];else v102[v254 + 3 ]=v255;end elseif (v255<v102[v254 + 1 ]) then v96=v104[3];else v102[v254 + 3 ]=v255;end end elseif (v105<=33) then v102[v104[2]]=v104[3];elseif (v105==34) then v102[v104[2]]=v102[v104[3]] + v104[15 -11 ] ;else v102[v104[2]][v102[v104[955 -(802 + 150) ]]]=v104[4];end elseif (v105<=41) then if (v105<=38) then if (v105<=36) then local v171=v104[2];local v172,v173=v95(v102[v171](v21(v102,v171 + 1 ,v97)));v97=(v173 + v171) -1 ;local v174=0;for v212=v171,v97 do v174=v174 + 1 ;v102[v212]=v172[v174];end elseif (v105==37) then if (v102[v104[2]]==v104[4]) then v96=v96 + 1 ;else v96=v104[7 -4 ];end else v102[v104[2]]=v41(v93[v104[3]],nil,v67);end elseif (v105<=39) then v102[v104[2]][v104[3]]=v104[4];elseif (v105==(72 -32)) then local v261=0;local v262;while true do if (v261==0) then v262=v104[2 + 0 ];v102[v262](v102[v262 + 1 ]);break;end end else v102[v104[2]]();end elseif (v105<=44) then if (v105<=(1039 -(915 + 82))) then local v177=v104[5 -3 ];local v178={};for v215=1, #v101 do local v216=v101[v215];for v263=0, #v216 do local v264=v216[v263];local v265=v264[1];local v266=v264[2];if ((v265==v102) and (v266>=v177)) then local v389=0;while true do if (v389==0) then v178[v266]=v265[v266];v264[1]=v178;break;end end end end end elseif (v105>43) then v102[v104[2]][v102[v104[3]]]=v104[4];else v102[v104[2]]=v102[v104[2 + 1 ]]%v104[4] ;end elseif (v105<=45) then v102[v104[2]]=v41(v93[v104[3 -0 ]],nil,v67);elseif (v105>46) then if  not v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end else local v270=v93[v104[1190 -(1069 + 118) ]];local v271;local v272={};v271=v18({},{[v7("\21\17\220\85\46\43\205","\59\74\78\181")]=function(v346,v347)local v348=0;local v349;while true do if (v348==0) then v349=v272[v347];return v349[1][v349[2]];end end end,[v7("\26\238\84\95\164\44\223\94\95\171","\211\69\177\58\58")]=function(v350,v351,v352)local v353=v272[v351];v353[2 -1 ][v353[2]]=v352;end});for v355=1,v104[4] do v96=v96 + 1 ;local v356=v92[v96];if (v356[1]==56) then v272[v355-1 ]={v102,v356[3]};else v272[v355-1 ]={v66,v356[3]};end v101[ #v101 + 1 ]=v272;end v102[v104[2]]=v41(v270,v271,v67);end elseif (v105<=71) then if (v105<=59) then if (v105<=(115 -62)) then if (v105<=50) then if (v105<=48) then local v180=v104[1 + 1 ];local v181=v102[v104[3]];v102[v180 + 1 ]=v181;v102[v180]=v181[v104[4]];elseif (v105==49) then if v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end else local v274=0;local v275;while true do if (0==v274) then v275=v104[2];v102[v275](v21(v102,v275 + 1 ,v104[3]));break;end end end elseif (v105<=51) then v102[v104[2]]=v102[v104[3]][v104[4]];elseif (v105>52) then v102[v104[3 -1 ]]=v102[v104[3]];else local v278=0;local v279;while true do if (v278==0) then v279=v104[2 + 0 ];do return v21(v102,v279,v97);end break;end end end elseif (v105<=56) then if (v105<=54) then if (v104[2]==v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105>55) then v102[v104[2]]=v102[v104[3]];else local v283=0;local v284;while true do if (0==v283) then v284=v104[2];v102[v284](v21(v102,v284 + 1 ,v97));break;end end end elseif (v105<=57) then do return v102[v104[2]]();end elseif (v105>58) then v102[v104[2]]=v67[v104[3]];else v96=v104[3];end elseif (v105<=65) then if (v105<=62) then if (v105<=(851 -(368 + 423))) then local v187=0;local v188;local v189;while true do if (v187==0) then v188=v104[2];v189=v102[v188];v187=1;end if (v187==1) then for v392=v188 + 1 ,v97 do v15(v189,v102[v392]);end break;end end elseif (v105==61) then v102[v104[2]]=v104[3] + v102[v104[12 -8 ]] ;elseif  not v102[v104[2]] then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=63) then local v190=v104[2];local v191,v192=v95(v102[v190](v21(v102,v190 + 1 ,v104[21 -(10 + 8) ])));v97=(v192 + v190) -1 ;local v193=0;for v217=v190,v97 do local v218=0;while true do if (v218==0) then v193=v193 + 1 ;v102[v217]=v191[v193];break;end end end elseif (v105==64) then v102[v104[7 -5 ]]={};else local v290=0;local v291;local v292;while true do if (v290==0) then v291=v104[2];v292=v102[v291];v290=1;end if (1==v290) then for v442=v291 + 1 ,v97 do v15(v292,v102[v442]);end break;end end end elseif (v105<=68) then if (v105<=66) then local v194=v104[2];do return v21(v102,v194,v97);end elseif (v105>67) then for v360=v104[2],v104[3] do v102[v360]=nil;end elseif (v102[v104[2]]<v104[4]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105<=69) then v102[v104[444 -(416 + 26) ]][v104[9 -6 ]]=v102[v104[4]];elseif (v105>70) then v102[v104[2]]=v104[3] + v102[v104[4]] ;else local v294=v104[2];v102[v294]=v102[v294](v21(v102,v294 + 1 + 0 ,v97));end elseif (v105<=83) then if (v105<=77) then if (v105<=74) then if (v105<=72) then v102[v104[3 -1 ]]=v102[v104[3]]%v104[4] ;elseif (v105>73) then local v296=v104[2];local v297,v298=v95(v102[v296](v102[v296 + 1 ]));v97=(v298 + v296) -(439 -(145 + 293)) ;local v299=0;for v362=v296,v97 do local v363=0;while true do if (v363==0) then v299=v299 + (431 -(44 + 386)) ;v102[v362]=v297[v299];break;end end end else local v300=0;local v301;while true do if (0==v300) then v301=v104[2];v102[v301]=v102[v301](v21(v102,v301 + 1 ,v104[1489 -(998 + 488) ]));break;end end end elseif (v105<=75) then local v198=v104[2];local v199=v102[v198 + 2 ];local v200=v102[v198] + v199 ;v102[v198]=v200;if (v199>0) then if (v200<=v102[v198 + 1 ]) then v96=v104[3];v102[v198 + 3 ]=v200;end elseif (v200>=v102[v198 + 1 ]) then v96=v104[1 + 2 ];v102[v198 + 3 ]=v200;end elseif (v105==76) then local v302=v104[2];v102[v302]=v102[v302](v21(v102,v302 + 1 ,v97));else v96=v104[3];end elseif (v105<=80) then if (v105<=78) then v102[v104[2 + 0 ]]=v102[v104[3]]%v102[v104[4]] ;elseif (v105==79) then local v305=v104[2];v102[v305]=v102[v305]();else local v307=0;local v308;while true do if (v307==0) then v308=v104[2];v102[v308]=v102[v308](v102[v308 + 1 ]);break;end end end elseif (v105<=81) then local v203=0;local v204;while true do if (v203==0) then v204=v104[2];do return v102[v204](v21(v102,v204 + 1 ,v104[3]));end break;end end elseif (v105>82) then local v309=0;local v310;local v311;local v312;local v313;while true do if (1==v309) then v97=(v312 + v310) -1 ;v313=772 -(201 + 571) ;v309=2;end if (v309==2) then for v445=v310,v97 do local v446=0;while true do if (0==v446) then v313=v313 + 1 ;v102[v445]=v311[v313];break;end end end break;end if (0==v309) then v310=v104[2];v311,v312=v95(v102[v310](v102[v310 + 1 ]));v309=1;end end else v102[v104[1140 -(116 + 1022) ]]();end elseif (v105<=(370 -281)) then if (v105<=86) then if (v105<=(50 + 34)) then v102[v104[2]]=v102[v104[3]][v104[4]];elseif (v105==85) then v102[v104[2]]=v102[v104[3]] + v104[4] ;else v102[v104[2]][v104[3]]=v102[v104[4]];end elseif (v105<=87) then v102[v104[2]]=v104[3]~=(0 -0) ;elseif (v105>88) then local v317=v104[2];v102[v317](v21(v102,v317 + 1 ,v104[3]));else local v318=0;local v319;local v320;while true do if (v318==1) then v102[v319 + 1 ]=v320;v102[v319]=v320[v104[4]];break;end if (v318==0) then v319=v104[2];v320=v102[v104[3]];v318=1;end end end elseif (v105<=92) then if (v105<=(319 -229)) then if (v102[v104[2]]==v102[v104[4]]) then v96=v96 + 1 ;else v96=v104[3];end elseif (v105==91) then v102[v104[2]]={};else local v323=0;local v324;local v325;local v326;while true do if (v323==1) then v326=0;for v447=v324,v104[4] do local v448=0;while true do if (v448==0) then v326=v326 + 1 ;v102[v447]=v325[v326];break;end end end break;end if (v323==0) then v324=v104[2];v325={v102[v324](v21(v102,v324 + 1 ,v97))};v323=1;end end end elseif (v105<=93) then do return v102[v104[2]]();end elseif (v105>94) then local v327=v104[2];local v328=v104[4];local v329=v327 + 2 ;local v330={v102[v327](v102[v327 + (860 -(814 + 45)) ],v102[v329])};for v365=2 -1 ,v328 do v102[v329 + v365 ]=v330[v365];end local v331=v330[1 + 0 ];if v331 then local v401=0;while true do if (v401==0) then v102[v329]=v331;v96=v104[3];break;end end else v96=v96 + 1 ;end else v102[v104[2]][v102[v104[3]]]=v102[v104[2 + 2 ]];end v96=v96 + 1 ;break;end end end end;end end end return v41(v40(),{},v28)(...);end if (v29==5) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==6) then v40=nil;function v40()local v72=0;local v73;local v74;local v75;local v76;local v77;local v78;while true do if (v72==2) then for v106=1,v35() do local v107=0;local v108;while true do if (v107==0) then v108=v33();if (v32(v108,1,1 + 0 )==0) then local v126=0;local v127;local v128;local v129;while true do if (v126==1) then v129={v34(),v34(),nil,nil};if (v127==0) then local v131=0;while true do if (v131==0) then v129[3]=v34();v129[4]=v34();break;end end elseif (v127==1) then v129[3]=v35();elseif (v127==2) then v129[3]=v35() -(2^16) ;elseif (v127==3) then local v208=0;while true do if (v208==0) then v129[3]=v35() -((879 -(282 + 595))^16) ;v129[1641 -(1523 + 114) ]=v34();break;end end end v126=2;end if (v126==0) then v127=v32(v108,1 + 1 ,3);v128=v32(v108,4,6);v126=1;end if (v126==3) then if (v32(v128,3,3)==1) then v129[4 + 0 ]=v78[v129[4]];end v73[v106]=v129;break;end if (v126==2) then if (v32(v128,1,1)==1) then v129[2]=v78[v129[2]];end if (v32(v128,2,2)==1) then v129[3]=v78[v129[3]];end v126=3;end end end break;end end end for v109=1,v35() do v74[v109-1 ]=v40();end return v76;end if (v72==0) then v73={};v74={};v75={};v76={v73,v74,nil,v75};v72=1;end if (v72==1) then v77=v35();v78={};for v111=1,v77 do local v112=0;local v113;local v114;while true do if (v112==1) then if (v113==1) then v114=v33()~=0 ;elseif (v113==2) then v114=v36();elseif (v113==3) then v114=v37();end v78[v111]=v114;break;end if (v112==0) then v113=v33();v114=nil;v112=1;end end end v76[3]=v33();v72=2;end end end v41=nil;v29=7;end end end vv17(),...);
--[[
OBFUSCATE BY [Delete User]#4238
-------------------------------
]]--
